# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from . import agent_pb2 as agent__pb2

GRPC_GENERATED_VERSION = '1.73.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in agent_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class AgentStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Init = channel.unary_unary(
                '/agent.Agent/Init',
                request_serializer=agent__pb2.InitRequest.SerializeToString,
                response_deserializer=agent__pb2.InitResponse.FromString,
                _registered_method=True)
        self.GetState = channel.unary_unary(
                '/agent.Agent/GetState',
                request_serializer=agent__pb2.GetStateRequest.SerializeToString,
                response_deserializer=agent__pb2.GetStateResponse.FromString,
                _registered_method=True)
        self.SetState = channel.unary_unary(
                '/agent.Agent/SetState',
                request_serializer=agent__pb2.SetStateRequest.SerializeToString,
                response_deserializer=agent__pb2.SetStateResponse.FromString,
                _registered_method=True)
        self.GetAction = channel.unary_unary(
                '/agent.Agent/GetAction',
                request_serializer=agent__pb2.GetActionRequest.SerializeToString,
                response_deserializer=agent__pb2.GetActionResponse.FromString,
                _registered_method=True)
        self.PlannerStep = channel.unary_unary(
                '/agent.Agent/PlannerStep',
                request_serializer=agent__pb2.PlannerStepRequest.SerializeToString,
                response_deserializer=agent__pb2.PlannerStepResponse.FromString,
                _registered_method=True)
        self.Step = channel.unary_unary(
                '/agent.Agent/Step',
                request_serializer=agent__pb2.StepRequest.SerializeToString,
                response_deserializer=agent__pb2.StepResponse.FromString,
                _registered_method=True)
        self.Reset = channel.unary_unary(
                '/agent.Agent/Reset',
                request_serializer=agent__pb2.ResetRequest.SerializeToString,
                response_deserializer=agent__pb2.ResetResponse.FromString,
                _registered_method=True)
        self.SetTaskParameters = channel.unary_unary(
                '/agent.Agent/SetTaskParameters',
                request_serializer=agent__pb2.SetTaskParametersRequest.SerializeToString,
                response_deserializer=agent__pb2.SetTaskParametersResponse.FromString,
                _registered_method=True)
        self.GetTaskParameters = channel.unary_unary(
                '/agent.Agent/GetTaskParameters',
                request_serializer=agent__pb2.GetTaskParametersRequest.SerializeToString,
                response_deserializer=agent__pb2.GetTaskParametersResponse.FromString,
                _registered_method=True)
        self.SetCostWeights = channel.unary_unary(
                '/agent.Agent/SetCostWeights',
                request_serializer=agent__pb2.SetCostWeightsRequest.SerializeToString,
                response_deserializer=agent__pb2.SetCostWeightsResponse.FromString,
                _registered_method=True)
        self.GetResiduals = channel.unary_unary(
                '/agent.Agent/GetResiduals',
                request_serializer=agent__pb2.GetResidualsRequest.SerializeToString,
                response_deserializer=agent__pb2.GetResidualsResponse.FromString,
                _registered_method=True)
        self.GetCostValuesAndWeights = channel.unary_unary(
                '/agent.Agent/GetCostValuesAndWeights',
                request_serializer=agent__pb2.GetCostValuesAndWeightsRequest.SerializeToString,
                response_deserializer=agent__pb2.GetCostValuesAndWeightsResponse.FromString,
                _registered_method=True)
        self.SetMode = channel.unary_unary(
                '/agent.Agent/SetMode',
                request_serializer=agent__pb2.SetModeRequest.SerializeToString,
                response_deserializer=agent__pb2.SetModeResponse.FromString,
                _registered_method=True)
        self.GetMode = channel.unary_unary(
                '/agent.Agent/GetMode',
                request_serializer=agent__pb2.GetModeRequest.SerializeToString,
                response_deserializer=agent__pb2.GetModeResponse.FromString,
                _registered_method=True)
        self.GetAllModes = channel.unary_unary(
                '/agent.Agent/GetAllModes',
                request_serializer=agent__pb2.GetAllModesRequest.SerializeToString,
                response_deserializer=agent__pb2.GetAllModesResponse.FromString,
                _registered_method=True)
        self.GetBestTrajectory = channel.unary_unary(
                '/agent.Agent/GetBestTrajectory',
                request_serializer=agent__pb2.GetBestTrajectoryRequest.SerializeToString,
                response_deserializer=agent__pb2.GetBestTrajectoryResponse.FromString,
                _registered_method=True)
        self.SetAnything = channel.unary_unary(
                '/agent.Agent/SetAnything',
                request_serializer=agent__pb2.SetAnythingRequest.SerializeToString,
                response_deserializer=agent__pb2.SetAnythingResponse.FromString,
                _registered_method=True)


class AgentServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Init(self, request, context):
        """Initialize MJPC Agent.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetState(self, request, context):
        """Get the simulation state.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetState(self, request, context):
        """Set state of the MJPC Agent.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAction(self, request, context):
        """Get the current action from the Agent.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PlannerStep(self, request, context):
        """Compute one plan step.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Step(self, request, context):
        """Step physics once, using actions from the planner.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Reset(self, request, context):
        """Reset the Agent.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetTaskParameters(self, request, context):
        """Set a task parameters.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTaskParameters(self, request, context):
        """Get a task parameters.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetCostWeights(self, request, context):
        """Set cost weights.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetResiduals(self, request, context):
        """Get cost term residuals.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCostValuesAndWeights(self, request, context):
        """Get cost term values.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetMode(self, request, context):
        """Set mode.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMode(self, request, context):
        """Get mode.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllModes(self, request, context):
        """Get all modes.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBestTrajectory(self, request, context):
        """Get best trajectory (states, actions, times).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetAnything(self, request, context):
        """A single method that can set many of the inputs.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AgentServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Init': grpc.unary_unary_rpc_method_handler(
                    servicer.Init,
                    request_deserializer=agent__pb2.InitRequest.FromString,
                    response_serializer=agent__pb2.InitResponse.SerializeToString,
            ),
            'GetState': grpc.unary_unary_rpc_method_handler(
                    servicer.GetState,
                    request_deserializer=agent__pb2.GetStateRequest.FromString,
                    response_serializer=agent__pb2.GetStateResponse.SerializeToString,
            ),
            'SetState': grpc.unary_unary_rpc_method_handler(
                    servicer.SetState,
                    request_deserializer=agent__pb2.SetStateRequest.FromString,
                    response_serializer=agent__pb2.SetStateResponse.SerializeToString,
            ),
            'GetAction': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAction,
                    request_deserializer=agent__pb2.GetActionRequest.FromString,
                    response_serializer=agent__pb2.GetActionResponse.SerializeToString,
            ),
            'PlannerStep': grpc.unary_unary_rpc_method_handler(
                    servicer.PlannerStep,
                    request_deserializer=agent__pb2.PlannerStepRequest.FromString,
                    response_serializer=agent__pb2.PlannerStepResponse.SerializeToString,
            ),
            'Step': grpc.unary_unary_rpc_method_handler(
                    servicer.Step,
                    request_deserializer=agent__pb2.StepRequest.FromString,
                    response_serializer=agent__pb2.StepResponse.SerializeToString,
            ),
            'Reset': grpc.unary_unary_rpc_method_handler(
                    servicer.Reset,
                    request_deserializer=agent__pb2.ResetRequest.FromString,
                    response_serializer=agent__pb2.ResetResponse.SerializeToString,
            ),
            'SetTaskParameters': grpc.unary_unary_rpc_method_handler(
                    servicer.SetTaskParameters,
                    request_deserializer=agent__pb2.SetTaskParametersRequest.FromString,
                    response_serializer=agent__pb2.SetTaskParametersResponse.SerializeToString,
            ),
            'GetTaskParameters': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTaskParameters,
                    request_deserializer=agent__pb2.GetTaskParametersRequest.FromString,
                    response_serializer=agent__pb2.GetTaskParametersResponse.SerializeToString,
            ),
            'SetCostWeights': grpc.unary_unary_rpc_method_handler(
                    servicer.SetCostWeights,
                    request_deserializer=agent__pb2.SetCostWeightsRequest.FromString,
                    response_serializer=agent__pb2.SetCostWeightsResponse.SerializeToString,
            ),
            'GetResiduals': grpc.unary_unary_rpc_method_handler(
                    servicer.GetResiduals,
                    request_deserializer=agent__pb2.GetResidualsRequest.FromString,
                    response_serializer=agent__pb2.GetResidualsResponse.SerializeToString,
            ),
            'GetCostValuesAndWeights': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCostValuesAndWeights,
                    request_deserializer=agent__pb2.GetCostValuesAndWeightsRequest.FromString,
                    response_serializer=agent__pb2.GetCostValuesAndWeightsResponse.SerializeToString,
            ),
            'SetMode': grpc.unary_unary_rpc_method_handler(
                    servicer.SetMode,
                    request_deserializer=agent__pb2.SetModeRequest.FromString,
                    response_serializer=agent__pb2.SetModeResponse.SerializeToString,
            ),
            'GetMode': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMode,
                    request_deserializer=agent__pb2.GetModeRequest.FromString,
                    response_serializer=agent__pb2.GetModeResponse.SerializeToString,
            ),
            'GetAllModes': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllModes,
                    request_deserializer=agent__pb2.GetAllModesRequest.FromString,
                    response_serializer=agent__pb2.GetAllModesResponse.SerializeToString,
            ),
            'GetBestTrajectory': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBestTrajectory,
                    request_deserializer=agent__pb2.GetBestTrajectoryRequest.FromString,
                    response_serializer=agent__pb2.GetBestTrajectoryResponse.SerializeToString,
            ),
            'SetAnything': grpc.unary_unary_rpc_method_handler(
                    servicer.SetAnything,
                    request_deserializer=agent__pb2.SetAnythingRequest.FromString,
                    response_serializer=agent__pb2.SetAnythingResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'agent.Agent', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('agent.Agent', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Agent(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Init(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agent.Agent/Init',
            agent__pb2.InitRequest.SerializeToString,
            agent__pb2.InitResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agent.Agent/GetState',
            agent__pb2.GetStateRequest.SerializeToString,
            agent__pb2.GetStateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agent.Agent/SetState',
            agent__pb2.SetStateRequest.SerializeToString,
            agent__pb2.SetStateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agent.Agent/GetAction',
            agent__pb2.GetActionRequest.SerializeToString,
            agent__pb2.GetActionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PlannerStep(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agent.Agent/PlannerStep',
            agent__pb2.PlannerStepRequest.SerializeToString,
            agent__pb2.PlannerStepResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Step(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agent.Agent/Step',
            agent__pb2.StepRequest.SerializeToString,
            agent__pb2.StepResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Reset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agent.Agent/Reset',
            agent__pb2.ResetRequest.SerializeToString,
            agent__pb2.ResetResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetTaskParameters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agent.Agent/SetTaskParameters',
            agent__pb2.SetTaskParametersRequest.SerializeToString,
            agent__pb2.SetTaskParametersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTaskParameters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agent.Agent/GetTaskParameters',
            agent__pb2.GetTaskParametersRequest.SerializeToString,
            agent__pb2.GetTaskParametersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetCostWeights(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agent.Agent/SetCostWeights',
            agent__pb2.SetCostWeightsRequest.SerializeToString,
            agent__pb2.SetCostWeightsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetResiduals(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agent.Agent/GetResiduals',
            agent__pb2.GetResidualsRequest.SerializeToString,
            agent__pb2.GetResidualsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCostValuesAndWeights(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agent.Agent/GetCostValuesAndWeights',
            agent__pb2.GetCostValuesAndWeightsRequest.SerializeToString,
            agent__pb2.GetCostValuesAndWeightsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetMode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agent.Agent/SetMode',
            agent__pb2.SetModeRequest.SerializeToString,
            agent__pb2.SetModeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetMode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agent.Agent/GetMode',
            agent__pb2.GetModeRequest.SerializeToString,
            agent__pb2.GetModeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAllModes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agent.Agent/GetAllModes',
            agent__pb2.GetAllModesRequest.SerializeToString,
            agent__pb2.GetAllModesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetBestTrajectory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agent.Agent/GetBestTrajectory',
            agent__pb2.GetBestTrajectoryRequest.SerializeToString,
            agent__pb2.GetBestTrajectoryResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetAnything(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agent.Agent/SetAnything',
            agent__pb2.SetAnythingRequest.SerializeToString,
            agent__pb2.SetAnythingResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
